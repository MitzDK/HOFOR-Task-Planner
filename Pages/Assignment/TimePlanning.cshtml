@page
@model HOFORTaskPlanner.Pages.Assignment.TimePlanningModel
@{
    ViewData["Title"] = "Tidsplanlægning";
}
<table class="table text-center">
    <thead class="table-hofor">
        <tr>
            <th>Status</th>
            <th>Beskrivelse</th>
            <th>Start</th>
            <th>Slut</th>
            <th>Estimat</th>
            <th>Rest</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.Assignment.Status</td>
            <td>@Model.Assignment.Description</td>
            <td>
                @Model.Assignment.StartDate.Day/@Model.Assignment.StartDate.Month/@Model.Assignment.StartDate.Year
            </td>
            <td>@Model.Assignment.EndDate.Day/@Model.Assignment.EndDate.Month/@Model.Assignment.EndDate.Year</td>
            <td>@Model.Assignment.Estimate</td>
            <td>@Model.TotalTimer(Model.Assignment.AssignmentId)</td>
        </tr>
    </tbody>
</table>
<form onsubmit="myFunction()" method="post">
    <table class="table grid text-center ">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <col style="width: calc(100% / 13)">
        <thead class="table-hofor">
        <tr>
            <th></th>
            <th scope="col">Jan</th>
            <th scope="col">Feb</th>
            <th scope="col">Mar</th>
            <th scope="col">Apr</th>
            <th scope="col">Maj</th>
            <th scope="col">Jun</th>
            <th scope="col">Jul</th>
            <th scope="col">Aug</th>
            <th scope="col">Sep</th>
            <th scope="col">Okt</th>
            <th scope="col">Nov</th>
            <th scope="col">Dec</th>
        </tr>
        </thead>
        <tbody>
        @if (@Model.ShowList(Model.Year, Model.Assignment.AssignmentId) != null)
        {
            int i = Model.Assignment.StartDate.Year;
            Model.TimeHours = Model.PopulateTable(Model.Assignment);
            //foreach (var varint in Model.PopulateTable(Model.Assignment))
            for (int newint = 0; newint < Model.TimeHours.Count; newint += 12)
            {
                <tr>
                    <td style="background-color: white; @Model.GetClassForCurrentYearFirst(i)">@i</td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 1) < Model.Assignment.StartDate || Model.DateChecker(i, 1) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 2) < Model.Assignment.StartDate || Model.DateChecker(i, 2) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[1+ newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[1+ newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 3) < Model.Assignment.StartDate || Model.DateChecker(i, 3) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[2+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[2+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 4) < Model.Assignment.StartDate || Model.DateChecker(i, 4) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[3+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[3+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 5) < Model.Assignment.StartDate || Model.DateChecker(i, 5) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[4+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[4+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 6) < Model.Assignment.StartDate || Model.DateChecker(i, 6) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[5+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[5+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 7) < Model.Assignment.StartDate || Model.DateChecker(i, 7) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[6+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[6+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 8) < Model.Assignment.StartDate || Model.DateChecker(i, 8) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[7+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[7+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 9) < Model.Assignment.StartDate || Model.DateChecker(i, 9) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[8+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[8+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 10) < Model.Assignment.StartDate || Model.DateChecker(i, 10) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[9+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[9+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 11) < Model.Assignment.StartDate || Model.DateChecker(i, 11) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[10+newint]" />
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[10+newint]" />
                        }
                    </td>
                    <td style="@Model.GetClassForCurrentYear(i)">
                        @if (Model.DateChecker(i, 12) < Model.Assignment.StartDate || Model.DateChecker(i, 12) > Model.Assignment.EndDate)
                        {
                            <input style="width: 100%;" readonly="readonly" asp-for="TimeHours[11 + newint]"/>
                        }
                        else
                        {
                            <input style="width: 100%;"  asp-for="TimeHours[11 + newint]"/>
                        }
                    </td>
                </tr>
                i++;
            }
        }

        </tbody>
    </table>
    <div class="container" style="display: flex; justify-content: space-between">
        <button type="submit" class="btn btn-primary">Opdater</button>
        <a class="btn btn-hofor" style="text-decoration: none" data-toggle="tooltip" title="Forrige side" href='javascript:history.go(-1)'><i class="fa fa-circle-left"></i> Tilbage</a>
    </div>
</form>
<script>
    function checkInput(input){
        if(!input.value){
            input.value = 0;
        }
    }

// Find all the <input> elements and loop thorugh them

    function myFunction() {
        document.querySelectorAll("input").forEach(function(element){
            checkInput(element); // Call the checkInput function and pass the current input
        });
    }
</script>